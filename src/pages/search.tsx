import type { NextPage } from "next";
import Head from "next/head";
import PageTitle from "../components/PageTitle";
import BlogItem from "../components/BlogItem";
import ProductItem from "../components/ProductItem";

const Search: NextPage = ({ blogs, products, query }: any) => {
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={`Search Results for: ${query}`} />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          
          <h2>Blogs</h2>
          <div className="row isotope-grid">
            {blogs.map((blog: any) => (
              <div key={blog.id} className="col-4">
                <BlogItem blog={blog} />
              </div>
            ))}
          </div>

          
          <h2>Products</h2>
          <div className="row isotope-grid">
            {products.map((product: any) => (
              <div key={product.id} className="col-4">
                <ProductItem
                  title={product.title}
                  price={product.price}
                  image={product.image}
                  description={product.description}
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </>
  );
};

export default Search;

export async function getServerSideProps(context: any) {
  const { query } = context.query; 

  
  const [blogResponse, productResponse] = await Promise.all([
    fetch(`http://localhost:5001/blogs?q=${query}`),
    fetch(`http://localhost:5001/products?q=${query}`),
  ]);

  if (!blogResponse.ok || !productResponse.ok) {
    return {
      props: {
        blogs: [],
        products: [],
        query,
      },
    };
  }

  const [blogs, products] = await Promise.all([
    blogResponse.json(),
    productResponse.json(),
  ]);

  return {
    props: {
      blogs,
      products,
      query,
    },
  };
}
